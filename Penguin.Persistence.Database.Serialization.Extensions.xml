<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Penguin.Persistence.Database.Serialization.Extensions</name>
    </assembly>
    <members>
        <member name="M:Penguin.Persistence.Database.Serialization.Extensions.DataTableExtensions.ToMetaObject(System.Data.DataTable)">
            <summary>
            Casts a DataTable into list of MetaObjects
            </summary>
            <param name="dt">The data table to be used as a source</param>
            <returns>A list of MetaObjects representing the data</returns>
        </member>
        <member name="M:Penguin.Persistence.Database.Serialization.Extensions.MetaObjectExtensions.ToSqlParameters(Penguin.Reflection.Serialization.Abstractions.Interfaces.IMetaObject)">
            <summary>
            Converts a MetaObject containing a collection of SQL parameter definitions to concrete parameters
            </summary>
            <param name="metaObject">The meta object containing the collection</param>
            <returns>A collection of SQL parameter definitions to concrete parameters</returns>
        </member>
        <member name="M:Penguin.Persistence.Database.Serialization.Extensions.SqlParameterInfoExtensions.ToMetaObject(Penguin.Persistence.Database.SQLParameterInfo,Penguin.Reflection.Serialization.Constructors.MetaConstructor)">
            <summary>
            Converts a SQL parameter into a MetaObject so that it can be serialized and displayed through a dynamic editor
            </summary>
            <param name="parameter">The parameter to convert</param>
            <param name="c">The optional MetaConstructor to use as a start, for caching</param>
            <returns>A Meta representation of the SQL parameter</returns>
        </member>
        <member name="M:Penguin.Persistence.Database.Serialization.Extensions.SqlParameterInfoExtensions.ToMetaObject(System.Collections.Generic.IEnumerable{Penguin.Persistence.Database.SQLParameterInfo},Penguin.Reflection.Serialization.Constructors.MetaConstructor)">
            <summary>
            Converts a List of SQL parameters into MetaObjects so that they can be serialized and displayed through a dynamic editor
            </summary>
            <param name="parameters">A List of Sql parameters to serialize</param>
            <param name="c">The optional MetaConstructor to use as a start, for caching</param>
            <returns>A MetaObject representing a collection of the serialized parameters</returns>
        </member>
    </members>
</doc>
